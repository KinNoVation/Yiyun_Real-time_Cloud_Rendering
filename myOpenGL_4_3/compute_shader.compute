#version 430
layout (local_size_x = 16, local_size_y = 16) in;
layout (rgba32f, binding = 0) uniform image2D img_output;

uniform 

struct Ray
{
	vec3 ori;
	vec3 dir;
};

struct Hit
{
	vec3 bestHit;
	vec3 entryPoint;
	vec3 exitPoint;
};
void main ()
{
	
	ivec2 pixel_coords = ivec2 (gl_GlobalInvocationID.xy);

	float max_x = 5.0;
	float max_y = 5.0;
	ivec2 dims = imageSize (img_output);
	float x = (float(pixel_coords.x * 2 - dims.x) / dims.x);
	float y = (float(pixel_coords.y * 2 - dims.y) / dims.y);

	Ray ray;
	ray.ori = vec3 (0, 0, -1);
	ray.dir = vec3(x, y, 0.0) - ray.ori;

	vec4 pixel_color = vec4(ray.dir, 1.0);

	//vec3 sphere_c = vec3 (0.0, 0.0, -10.0);
	//float sphere_r = 0.1;
	//vec3 omc = ray.ori - sphere_c;
	//float b = dot (ray.dir, omc);
	//float c = dot (omc, omc) - sphere_r * sphere_r;
	//float bsqmc = b * b - c;
	//// hit one or both sides
	//if (bsqmc >= 0.0)
	//{
	//	pixel_color = vec4 (0, 0, 0, 1.0);
	//}
	imageStore (img_output, pixel_coords, pixel_color);
}